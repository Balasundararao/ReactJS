{"version":3,"sources":["components/LandingPageComponent.js","components/practicecomponents/from_npms/date_picker.js","components/practicecomponents/from_npms/DatePickerField.js","components/practicecomponents/from_npms/date_picker_formik.js","components/practicecomponents/from_npms/date_picker_material.js","components/practicecomponents/from_npms/InsertStockComponent.js","components/practicecomponents/react_regular/ClasCounter.js","components/practicecomponents/react_hooks/HooksCounter.js","components/practicecomponents/react_hooks/HooksCounterTwo.js","components/practicecomponents/practice_landing.js","App.js","serviceWorker.js","index.js"],"names":["makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","BDatePicker","props","handleChange","date","setState","startDate","state","Date","selected","this","onChange","placeholderText","React","Component","DatePickerField","name","value","val","className","initialValues","onSubmit","values","setSubmitting","setTimeout","alert","JSON","stringify","dirty","touched","errors","isSubmitting","handleSubmit","handleBlur","handleReset","setFieldValue","type","onClick","disabled","useStyles","container","display","flexWrap","textField","marginLeft","width","DateAndTimePickers","classes","noValidate","TextField","id","label","defaultValue","InputLabelProps","shrink","InsertStockComponent","validate","a","console","log","dateFormat","ClassCounter","counterHandler","count","HooksCounter","useState","setCount","HooksCounterTwo","PracticeLanding","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.90d39a7e.chunk.js","sourcesContent":["import React from 'react'\nimport { BrowserRouter as Router, Switch, Route, Link, useParams, useRouteMatch, Redirect } from 'react-router-dom';\n\n// User Components....\nimport DashboardComponent from './whistlercomponents/DashboardComponent';\nimport WelcomeComponent   from './whistlercomponents/WelcomeComponent';\n\n// Material Components.....\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default ({ name }) => {\n\tconst classes = useStyles();\n\tconst loggedIn = false;\n\treturn (\n\t\t<Router>\n\t\t\t<div>\n\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<CssBaseline />\n\t\t\t\t\t<Container maxWidth=\"sm\">\n\t\t\t\t\t<AppBar position=\"static\">\n\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t<IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n\t\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>Whistler</Typography>\n\t\t\t\t\t\t\t<Button color=\"inherit\">Login</Button>\n  \t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t</AppBar>\n\t\t\t\t\t<Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '100vh' }} />\n\t\t\t\t\t</Container>\n\t\t\t\t</React.Fragment>\n\t\n\t\t\t\t<nav>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><Link to=\"/\">Home</Link></li>\n\t\t\t\t\t<li><Link to=\"/about\">About</Link></li>\n\t\t\t\t\t<li><Link to=\"/users\">Users</Link></li>\n\t\t\t\t\t<li><Link to=\"/netflix\">Netflix</Link></li>\n\t\t\t\t\t<li><Link to=\"/users\">Users</Link></li>\n\t\t\t\t\t<li><Link to=\"/topics\">Topics</Link></li>\n\t\t\t\t</ul>\n\t\t\t\t</nav>\n   \t\t\t\t<Button variant=\"contained\" color=\"primary\">\n      \t\t\tHello World\n    \t\t\t</Button>\n\t\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\">\n  \t\t\t\t\t\t{ loggedIn ? <Redirect to=\"/dashboard\" /> : <WelcomeComponent/> }\n\t\t\t\t\t</Route>\t\t\t\t\t\n\t\t\t\t\t<Route path=\"/home\"><Home/></Route>\n\t\t\t\t\t<Route path=\"/about\"><About/></Route>\n\t\t\t\t\t<Route path=\"/users\"><Users/></Route>\n\t\t\t\t\t<Route path=\"/netflix\"  render={ () => <h2>I m on path Netflix.....</h2>   }></Route>\n\t\t\t\t\t<Route path=\"/topics\"><Topics/></Route>\n\t\t\t\t\t<Route path=\"/dashboard\" component={DashboardComponent}></Route>\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t)\n}\n\nfunction Home() {\n\treturn <h2>Home</h2>;\n}\n\nfunction About() {\n\treturn <h2>About</h2>;\n}\n\nfunction Users() {\n  return <h2>Users</h2>;\n}\n\nfunction Topics(){\n    let match = useRouteMatch();\t\n\treturn  ( <div>\n    \t<h2>Topics Main .....</h2> \n\t\t<ul>\n\t\t<li><Link to={`${match.url}/components`}>Components</Link></li>\n\t\t<li><Link to={`${match.url}/props-v-state`}>props-v-state</Link></li>\n\t\t</ul>\n        <Switch>\n\t\t\t<Route path={`${match.url}/:topicId`}><Topic/></Route>\n\t\t\t<Route path={`${match.url}`}><h3>Please select a topic</h3></Route>\n\t\t</Switch>\n    \t</div>\t\n    )\n}\nfunction Topic() {\n\tlet {topicId} = useParams();\n\treturn(\n\t\t<h3>Requested Topic Id is :: {topicId} </h3>\n\t)\n}\n\n\n","import React,{Component} from 'react'\nimport DatePicker from \"react-datepicker\"\nimport \"react-datepicker/dist/react-datepicker.css\";\nclass  BDatePicker extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            startDate: new Date()\n        };\n    } // end constructor \n\n    handleChange = date => {\n        this.setState({ startDate: date});\n    };\n    \n    render(){\n        return (\n            <DatePicker \n             selected={this.state.startDate}\n             onChange={this.handleChange}\n             placeholderText=\"MM/DD/YYYY\"\n            />\n        );\n    }\n}\n\nexport default BDatePicker; ","import React from \"react\";\nimport DatePicker from \"react-datepicker\";\n\nconst DatePickerField = ({ name, value, onChange }) => {\n  return (\n    <DatePicker\n      selected={(value && new Date(value)) || null}\n      onChange={val => {\n        onChange(name, val);\n      }}\n    />\n  );\n};\n\nexport default DatePickerField;\n\n\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport DatePicker from \"./DatePickerField\"\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default () => {\n    return (\n        <div className=\"app\">\n        <Formik\n          initialValues={{ date: \"\" }}\n          onSubmit={(values, { setSubmitting }) => {\n            setTimeout(() => {\n              alert(JSON.stringify(values, null, 2));\n              setSubmitting(false);\n            }, 500);\n          }}\n        >\n          {props => {\n            const {\n              values,\n              touched,\n              errors,\n              dirty,\n              isSubmitting,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              handleReset,\n              setFieldValue\n            } = props;\n            return (\n              <form onSubmit={handleSubmit}>\n                <DatePicker\n                  name=\"date\"\n                  value={values.date}\n                  onChange={setFieldValue}\n                />\n                <button\n                  type=\"button\"\n                  className=\"outline\"\n                  onClick={handleReset}\n                  disabled={!dirty || isSubmitting}\n                >\n                  Reset\n                </button>\n                <button type=\"submit\" disabled={isSubmitting}>\n                  Submit\n                </button>\n    \n              </form>\n            );\n          }}\n        </Formik>\n      </div>\n    )\n\n}\n\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400,\n  },\n}));\n\nexport default function DateAndTimePickers() {\n  const classes = useStyles();\n\n  return (\n    <form className={classes.container} noValidate>\n      <TextField\n        id=\"datetime-local\"\n        label=\"Next appointment\"\n        type=\"datetime-local\"\n        defaultValue=\"2017-05-24T10:30\"\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n    </form>\n  );\n}","//import libraries\nimport React from 'react'\nimport { render } from 'react-dom';\nimport { Formik, Form } from 'formik'\nimport DatePicker from \"react-datepicker\"\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\n//Class component\nclass InsertStockComponent extends React.Component {\n  render() {\n    return (\n      <div id=\"main-content\">\n        <Formik\n          initialValues={{ startDate: new Date() }}\n          validate={(props, a) => console.log('a',props, a)}\n          onSubmit={(values, { setSubmitting }) => {\n            setTimeout(() => {\n              alert(JSON.stringify(values, null, 2));\n              setSubmitting(false);\n            }, 400);\n          }}\n\n        >\n          {({ isSubmitting, values, setFieldValue }) => (\n            <div className=\"row clearfix\">\n              <div className=\"header\">\n              </div>\n              <Form>\n                <div className=\"row ml-4 mr-4\">\n                  <div className=\"form-group col-3 mb-2\">\n                    <DatePicker \n                      selected={values.startDate}\n                      dateFormat=\"MMMM d, yyyy\"\n                      className=\"form-control\"\n                      name=\"startDate\"\n                      onChange={date => setFieldValue('startDate', date)}\n                    />\n                  </div>\n\n                </div>\n                <div className=\"row mb-3\">\n                  <div className=\"col-5 mb-4\"></div>\n                  <button type=\"submit\" className=\"btn btn-lg btn-outline-success mt-4 mb-4\" disabled={isSubmitting}>insert item</button>\n                </div>\n              </Form>\n            </div>\n          )}\n        </Formik>\n      </div>\n    )\n  }\n}\n\nexport default InsertStockComponent;","import React, {Component} from 'react';\n\nclass ClassCounter extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            count: 0\n        }\n    }\n    counterHandler = () => {\n        this.setState({\n            count: this.state.count + 1\n        })\n    }\n    render(){\n        return(\n            <div>\n                <p>Its a Class Counter Component::  <button onClick={this.counterHandler}>Increment Counter.  {this.state.count} </button> </p>\n            </div>\n        )\n    }\n}\nexport default ClassCounter;\n\n","import React, {useState} from 'react';\n\nfunction HooksCounter() {\n    //declare a state variable \n    const [count, setCount] = useState(0);\n    return (\n        <div>\n            <p>Its a counter from Hooks.... <button onClick={  () => setCount( count + 1) }> Increment Counter ..{count}</button></p>\n        </div>\n    )\n}\n\nexport default HooksCounter; \n\n","import React from 'react'\nfunction HooksCounterTwo() {\n\n    return(\n        <div>\n\n        </div>\n    )\n}\nexport default HooksCounterTwo;","import React, {Component} from 'react';\n\n// From NPMS examples....\nimport BDatePicker from './from_npms/date_picker'\nimport BFDatePicker from './from_npms/date_picker_formik'\nimport Basic from './from_npms/basic_formik'\nimport DateAndTimePickers from './from_npms/date_picker_material'\nimport InsertStockComponent from './from_npms/InsertStockComponent'\n\n//React Regular ....\nimport ClassCounter from './react_regular/ClasCounter';\n\n// React Hooks \nimport HooksCounter from './react_hooks/HooksCounter';\nimport HooksCounterTwo from './react_hooks/HooksCounterTwo';\n\n\n\nconst PracticeLanding = () => {\n    return (\n        <div>\n            <h1> Practice Landing Component.....</h1>\n            \n            {/* // from NPMS */}\n            <div>\n                <div>1.Simple Date picker using react-datepicker:: <BDatePicker/></div><br/><br/><br/>\n                <div>2.Formik + Date picker using react-datepicker  and  FORMIK:: <BFDatePicker/></div> \n                <div>3.Material Date picker :: <DateAndTimePickers/></div> \n                <div>4.DatePicker formik... :: <InsertStockComponent/></div> \n                 {/* <Basic/>  */}\n            </div>\n            {/* // React Regular  */}\n            <div>\n                <div><ClassCounter/></div>\n            </div>\n\n            {/* // React HOOKS */}\n            <div>   \n              <div><HooksCounter/></div>\n              <div><HooksCounterTwo/></div>\n            </div>\n\n        </div>\n    )\n}\nexport default PracticeLanding;\n","import React from 'react';\nimport './App.css';\n\nimport LandingPageComponent from './components/LandingPageComponent';\nimport PracticeLanding  from './components/practicecomponents/practice_landing'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\t\t{/* <LandingPageComponent/> */}     \n    <PracticeLanding/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}