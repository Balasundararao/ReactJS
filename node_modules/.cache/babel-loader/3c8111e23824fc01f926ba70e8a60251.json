{"ast":null,"code":"var _jsxFileName = \"/Users/balasundararaothunga/Documents/Balasundar/TEST_PROJECTS/ReactJS/betatest/src/components/practicecomponents/apple_whistler/adhocevalution/EvaluationChartComponent.jsx\";\nimport React, { Component } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ComposedChart, Legend, Area } from 'recharts';\nimport chroma from 'chroma-js';\nexport default function EvaluationChartComponent({\n  jsonObject,\n  confidenceInterval\n}) {\n  console.log(\"EvaluationChartComponent\"); // console.log(jsonObject, confidenceInterval)\n  // console.log(jsonObject.jsonObject.frequency)\n  // console.log(jsonObject.evaluations)\n  // console.log(jsonObject.jsonObject.evaluations[1])\n  // console.log(jsonObject.sdd)\n\n  let temp = {};\n  let tempInterval = {};\n  let newJsonObject = [];\n  jsonObject.evaluations.map(x => (tempInterval = [x.prediction + confidenceInterval * jsonObject.sdd, x.prediction - confidenceInterval * jsonObject.sdd], temp = {\n    \"timestamp\": x.timestamp,\n    \"prediction\": x.prediction,\n    \"data\": x.data,\n    \"sdd\": jsonObject.sdd,\n    \"confidenceBand\": tempInterval,\n    \"confidenceBandHigh\": x.prediction + confidenceInterval * jsonObject.sdd,\n    \"confidenceBandLow\": x.prediction - confidenceInterval * jsonObject.sdd\n  }, // console.log(temp),\n  newJsonObject.push(temp)));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 600,\n    style: {\n      padding: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(ComposedChart, {\n    data: newJsonObject,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(YAxis, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    content: customTooltip,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Legend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Line, {\n    stroke: \"blue\",\n    dataKey: \"data\",\n    dot: customDot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Line, {\n    stroke: \"green\",\n    dataKey: \"prediction\",\n    dot: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Area, {\n    stroke: \"black\",\n    fill: chroma('green').alpha(0.1),\n    dataKey: \"confidenceBand\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }))));\n\n  function customDot(props) {\n    console.log(\"customDot\"); // console.log(props)\n\n    if (props.payload.data > props.payload.confidenceBandHigh || props.payload.data < props.payload.confidenceBandLow) {\n      // console.log(`RED => ${props.payload.confidenceBandHigh} ${props.payload.data} ${props.payload.confidenceBandLow}`)\n      return React.createElement(\"svg\", {\n        x: props.cx - 10,\n        y: props.cy - 10,\n        width: 20,\n        height: 20,\n        fill: chroma('red').alpha(0.3),\n        viewBox: \"0 0 1024 1024\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"path\", {\n        d: \"M512 1009.984c-274.912 0-497.76-222.848-497.76-497.76s222.848-497.76 497.76-497.76c274.912 0 497.76 222.848 497.76 497.76s-222.848 497.76-497.76 497.76zM340.768 295.936c-39.488 0-71.52\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }));\n    }\n  }\n\n  function customTooltip(values) {\n    let valueTemp = values;\n    return valueTemp.active === true && React.createElement(\"div\", {\n      className: \"card scroll\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      className: \"header-with-bottom-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"font\", {\n      size: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, valueTemp.payload[0].payload.timestamp)))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      className: \"header-with-bottom-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"font\", {\n      size: \"3\",\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, confidenceInterval, \"\\u03C3\"))))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"font\", {\n      size: \"1\",\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Actual : \", Number(valueTemp.payload[0].payload.data.toFixed(2)))))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"font\", {\n      size: \"1\",\n      color: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Predcition : \", Number(valueTemp.payload[0].payload.prediction.toFixed(2)))))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"font\", {\n      size: \"1\",\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Conf. Band High : \", Number(valueTemp.payload[0].payload.confidenceBandHigh.toFixed(2)))))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"font\", {\n      size: \"1\",\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Conf. Band Low : \", Number(valueTemp.payload[0].payload.confidenceBandLow.toFixed(2)))))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"font\", {\n      size: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"(\\u03C3) Standard dev : \", Number(valueTemp.payload[0].payload.sdd.toFixed(2))))))))));\n  }\n\n  function customlegend(props) {\n    console.log(\"customlegend\");\n    console.log(props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"col-sm-4\",\n      fill: props.payload[0].color,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, props.payload[0].dataKey), React.createElement(\"span\", {\n      className: \"col-sm-4\",\n      fill: props.payload[0].color,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, props.payload[1].dataKey), React.createElement(\"span\", {\n      className: \"col-sm-4\",\n      fill: props.payload[0].color,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, props.payload[2].dataKey)));\n  }\n}","map":{"version":3,"sources":["/Users/balasundararaothunga/Documents/Balasundar/TEST_PROJECTS/ReactJS/betatest/src/components/practicecomponents/apple_whistler/adhocevalution/EvaluationChartComponent.jsx"],"names":["React","Component","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","ComposedChart","Legend","Area","chroma","EvaluationChartComponent","jsonObject","confidenceInterval","console","log","temp","tempInterval","newJsonObject","evaluations","map","x","prediction","sdd","timestamp","data","push","padding","customTooltip","customDot","alpha","props","payload","confidenceBandHigh","confidenceBandLow","cx","cy","values","valueTemp","active","Number","toFixed","customlegend","color","dataKey"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {LineChart,Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ComposedChart, Legend, Area} from 'recharts';\nimport chroma from 'chroma-js';\n\nexport default function EvaluationChartComponent({jsonObject, confidenceInterval}){\n    console.log(\"EvaluationChartComponent\")\n    // console.log(jsonObject, confidenceInterval)\n    // console.log(jsonObject.jsonObject.frequency)\n    // console.log(jsonObject.evaluations)\n    // console.log(jsonObject.jsonObject.evaluations[1])\n    // console.log(jsonObject.sdd)\n\n    let temp = {}\n    let tempInterval = {}\n    let newJsonObject = []\n    jsonObject.evaluations.map(\n        x => (\n            tempInterval = [x.prediction+(confidenceInterval*jsonObject.sdd),x.prediction-(confidenceInterval*jsonObject.sdd)],\n            temp = {\"timestamp\":x.timestamp, \"prediction\":x.prediction, \"data\":x.data, \"sdd\":jsonObject.sdd, \"confidenceBand\":tempInterval, \"confidenceBandHigh\":x.prediction+(confidenceInterval*jsonObject.sdd), \"confidenceBandLow\":x.prediction-(confidenceInterval*jsonObject.sdd)},\n            // console.log(temp),\n            newJsonObject.push(temp)\n        )\n    )\n\n    return(\n        <div>\n            <ResponsiveContainer width=\"100%\" height={600} style={{padding:15}}>\n                <ComposedChart data={newJsonObject}>\n                    <YAxis/>\n                    {/* <YAxis domain={['dataMin', 'dataMax']}/> */}\n                    <Tooltip content={customTooltip}/>\n                    <Legend/>\n                    <CartesianGrid strokeDasharray=\"3 3\"/>\n                    <Line stroke=\"blue\" dataKey=\"data\" dot={customDot}/>\n                    <Line stroke=\"green\" dataKey=\"prediction\" dot={false}/>\n                    {/* <Line stroke=\"red\" dataKey=\"confidenceBandHigh\"/>\n                    <Line stroke=\"red\" dataKey=\"confidenceBandLow\"/> */}\n                    <Area stroke=\"black\" fill={chroma('green').alpha(0.1)} dataKey=\"confidenceBand\"/>\n                </ComposedChart>\n            </ResponsiveContainer>\n        </div>\n    )\n\n    function customDot(props){\n        console.log(\"customDot\")\n        // console.log(props)\n        if(props.payload.data > props.payload.confidenceBandHigh || props.payload.data < props.payload.confidenceBandLow)\n        {\n            // console.log(`RED => ${props.payload.confidenceBandHigh} ${props.payload.data} ${props.payload.confidenceBandLow}`)\n            return(\n                <svg x={props.cx - 10} y={props.cy - 10} width={20} height={20} fill={chroma('red').alpha(0.3)} viewBox=\"0 0 1024 1024\">\n                    <path d=\"M512 1009.984c-274.912 0-497.76-222.848-497.76-497.76s222.848-497.76 497.76-497.76c274.912 0 497.76 222.848 497.76 497.76s-222.848 497.76-497.76 497.76zM340.768 295.936c-39.488 0-71.52\"/>\n                </svg>\n            )\n            \n        }\n    }\n\n    function customTooltip(values){\n        let valueTemp = values\n        return(\n            valueTemp.active===true && \n            <div className=\"card scroll\">\n                <div className=\"card-body\" align=\"left\">\n                    <table>\n                        <thead>\n                            <tr><th className=\"header-with-bottom-border\"><b><font size=\"1\">{ valueTemp.payload[0].payload.timestamp }</font></b></th></tr>\n                            <tr><th className=\"header-with-bottom-border\"><b><font size=\"3\" color=\"red\">{confidenceInterval}σ</font></b></th></tr>\n                        </thead>\n                        <tbody>\n                            <tr><td><b><font size=\"1\" color=\"blue\">Actual : { Number(valueTemp.payload[0].payload.data.toFixed(2)) }</font></b></td></tr>\n                            <tr><td><b><font size=\"1\" color=\"green\">Predcition : { Number(valueTemp.payload[0].payload.prediction.toFixed(2)) }</font></b></td></tr>\n                            <tr><td><b><font size=\"1\" color=\"black\">Conf. Band High : { Number(valueTemp.payload[0].payload.confidenceBandHigh.toFixed(2)) }</font></b></td></tr>\n                            <tr><td><b><font size=\"1\" color=\"black\">Conf. Band Low : { Number(valueTemp.payload[0].payload.confidenceBandLow.toFixed(2)) }</font></b></td></tr>\n                            <tr><td><i><font size=\"1\">(σ) Standard dev : { Number(valueTemp.payload[0].payload.sdd.toFixed(2)) }</font></i></td></tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n\n    function customlegend(props){\n        console.log(\"customlegend\")\n        console.log(props)\n        return(\n            <div>\n                <span className=\"row\">\n                    <span className=\"col-sm-4\" fill={props.payload[0].color}>\n                        {props.payload[0].dataKey}\n                    </span>\n                    <span className=\"col-sm-4\" fill={props.payload[0].color}>\n                        {props.payload[1].dataKey}\n                    </span>\n                    <span className=\"col-sm-4\" fill={props.payload[0].color}>\n                        {props.payload[2].dataKey}\n                    </span>\n                </span>\n            </div>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}