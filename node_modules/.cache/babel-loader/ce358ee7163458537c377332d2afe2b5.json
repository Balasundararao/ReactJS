{"ast":null,"code":"var _jsxFileName = \"/Users/balasundararaothunga/Documents/Balasundar/TEST_PROJECTS/ReactJS/betatest/src/components/practicecomponents/react_hooks/Hooks_useRed_counter2.js\";\nimport React, { useReducer } from 'react';\nconst initialState = {\n  counterValue: 0\n};\n\nconst c2Reducer = (state, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        counterValue: state.counterValue + 1\n      };\n\n    case \"DECREMENT\":\n      return {\n        counterValue: state.counterValue - 1\n      };\n\n    case \"RESET\":\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nconst Counter2UseRed = () => {\n  const [c2counter, dispatch] = useReducer(c2Reducer, initialState);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"useReducer Counter2, and the counter Value is :: \", c2counter.counterValue), React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'INCREMENT'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Increment\"), React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'DECREMENT'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Decrement\"), React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'RESET'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Reset\"));\n};\n\nexport default Counter2UseRed;","map":{"version":3,"sources":["/Users/balasundararaothunga/Documents/Balasundar/TEST_PROJECTS/ReactJS/betatest/src/components/practicecomponents/react_hooks/Hooks_useRed_counter2.js"],"names":["React","useReducer","initialState","counterValue","c2Reducer","state","action","type","Counter2UseRed","c2counter","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE;AADG,CAArB;;AAGA,MAAMC,SAAS,GAAG,CAAEC,KAAF,EAASC,MAAT,KAAsB;AACpC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,aAAO;AAACJ,QAAAA,YAAY,EAAGE,KAAK,CAACF,YAAN,GAAqB;AAArC,OAAP;;AACJ,SAAK,WAAL;AACI,aAAO;AAACA,QAAAA,YAAY,EAAEE,KAAK,CAACF,YAAN,GAAqB;AAApC,OAAP;;AACJ,SAAK,OAAL;AACI,aAAOD,YAAP;;AACJ;AACI,aAAOG,KAAP;AARR;AAUH,CAXD;;AAaA,MAAMG,cAAc,GAAG,MAAM;AACzB,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBT,UAAU,CAACG,SAAD,EAAYF,YAAZ,CAAxC;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAAqDO,SAAS,CAACN,YAA/D,CADJ,EAEI;AAAQ,IAAA,OAAO,EAAG,MAAMO,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAGI;AAAQ,IAAA,OAAO,EAAG,MAAMG,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,EAII;AAAQ,IAAA,OAAO,EAAG,MAAMG,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,CADJ;AASH,CAXD;;AAYA,eAAeC,cAAf","sourcesContent":["import React, {useReducer} from 'react'\nconst initialState = {\n    counterValue: 0\n}\nconst c2Reducer = ( state, action  ) => {\n    switch( action.type ) {\n        case \"INCREMENT\" :\n            return {counterValue:  state.counterValue + 1 }\n        case \"DECREMENT\" :\n            return {counterValue: state.counterValue - 1}\n        case \"RESET\" :\n            return initialState\n        default :\n            return state\n    }\n}\n\nconst Counter2UseRed = () => {\n    const [c2counter, dispatch] = useReducer(c2Reducer, initialState)\n    return(\n        <div>\n            <p>useReducer Counter2, and the counter Value is :: {c2counter.counterValue}</p>\n            <button onClick={ () => dispatch({type: 'INCREMENT'}) }>Increment</button>\n            <button onClick={ () => dispatch({type: 'DECREMENT'})}>Decrement</button>\n            <button onClick={ () => dispatch({type:'RESET'})}>Reset</button>\n            \n        </div>\n    )\n}\nexport default Counter2UseRed;"]},"metadata":{},"sourceType":"module"}