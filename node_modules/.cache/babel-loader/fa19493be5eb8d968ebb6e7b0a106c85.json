{"ast":null,"code":"var _jsxFileName = \"/Users/balasundararaothunga/Documents/Balasundar/TEST_PROJECTS/ReactJS/betatest/src/components/practicecomponents/apple_whistler/adhocevalution_local/evalution_form.jsx\";\nimport React, { useState, useRef } from 'react';\nimport CSVReader from \"react-csv-reader\";\nimport moment from 'moment';\nimport { toast } from 'react-toastify';\nimport EvaluationChartComponent from './EvaluationChartComponent.jsx';\nimport AnomalyService from '../../../../api/AnomalyService';\nimport EvaluationGuidelineComponent from './EvaluationGuidelineComponent.jsx';\nexport default function EvalutionFormComponent({\n  showList,\n  setShowList\n}) {\n  const initalValues = {\n    evFld1: '',\n    evFld2: '',\n    evFld3: '',\n    evFile: '',\n    btnDisabled: false,\n    err: false,\n    errMsg: '',\n    successMsg: '',\n    csvKeys: [],\n    csvData: [],\n    jsonObject: undefined,\n    btnDisabled: false,\n    confidenceInterval: 3,\n    frequencyOptions: [{\n      id: 'D',\n      name: 'Daily'\n    }, {\n      id: 'W',\n      name: 'Weekly'\n    }, {\n      id: 'M',\n      name: 'Monthly'\n    }, {\n      id: 'H',\n      name: 'Hourly'\n    }]\n  };\n  const initialCompliance = {\n    numRowsLessThan100: null,\n    minHourlyRows: null,\n    minDailyRows: null,\n    minWeeklyRows: null,\n    minMonthlyRows: null,\n    atLeast2Cols: null,\n    atLeast1DateCol: null,\n    atLeast1DataCol: null\n  };\n  let debug = false;\n  let data_pattern = new RegExp('^\\\\d+$');\n  var date_pattern = new RegExp(\"^(19|20)[0-9]{2}[\\/\\-](0[1-9]|1[012])|([a-zA-Z]{3})[\\/\\-](0[1-9]|[12][0-9]|3[01])(T|\\s)(([0-1][0-9])|(2[0-3])):([0-5][0-9]):([0-5][0-9])$\");\n  const [formData, setFormData] = useState(initalValues);\n  const [complianceGuideline, setComplianceGuideline] = useState(initialCompliance);\n  const jsonObj = {};\n  let errEvMsg = \"\";\n  let errFlag = false; // HandleUpload Btn Click....\n\n  const handleUploadClick = evt => {\n    console.log(evFld1, evFld2, evFld3, evFile);\n    evt.preventDefault();\n    const {\n      evFld1,\n      evFld2,\n      evFld3,\n      evFile\n    } = formData;\n    let timeSeriesData = []; // validating data is proper \n\n    formData.csvData.map((x, index) => {\n      let tstamp = new Date(x[evFld1]);\n      let data_item = x[evFld2];\n\n      if (tstamp.getTime() > 0 && date_pattern.test(x[evFld1]) === true && data_pattern.test(data_item) === true) {\n        let datee = moment(tstamp.toLocaleDateString()).format(\"YYYY-MM-DD HH:mm:ss\");\n        let data = {\n          \"timestamp\": datee,\n          \"value\": x[evFld2]\n        };\n        return timeSeriesData.push(data);\n      } else {\n        setFormData({ ...formData,\n          err: true\n        });\n      }\n    }); // end of map function....\n\n    jsonObj[\"timeseriesdata\"] = timeSeriesData;\n    jsonObj[\"frequency\"] = evFld3;\n    console.log(jsonObj);\n    const whistlerAdhocEvalList = JSON.stringify(jsonObj);\n    AnomalyService.postAdhocEvaluationJsonExternal(whistlerAdhocEvalList).then(response => {\n      //setFormData({...formData, jsonObject: response.data})\n      setFormData(prevFormData => ({ ...prevFormData,\n        jsonObject: response.data,\n        successMsg: \"\",\n        evFile: ''\n      }));\n      document.querySelector('.csv-input').value = '';\n    }).then(console.log(formData)).catch();\n    setFormData({ ...initalValues,\n      frequencyOptions: [],\n      successMsg: 'Evaluating your data now...'\n    }); // resetting the state after submit....\n    //console.log(formData.evFld1, formData.evFld2, formData.evFld3, formData.evFile)\n  };\n\n  function countRepeated(arr) {\n    return arr.reduce((acc, val) => acc.set(val, 1 + (acc.get(val) || 0)), new Map());\n  } // File Upload Event....\n\n\n  const handleForce = (data, fileName) => {\n    let errHFMsg = \"\";\n    setFormData(prevState => initalValues);\n\n    if (debug) {\n      console.log(\"HandleForce after Initial :: \" + JSON.stringify(formData));\n    }\n\n    let fields = {\n      \"datafield\": 0,\n      \"datefield\": 0\n    };\n    const column_length = 2;\n    const columns = Object.keys(data[0]);\n    const data_values = Object.values(data[1]);\n    data_values.reduce((acc, val) => {\n      if (data_pattern.test(val) === true) {\n        fields[\"datafield\"]++;\n      } else if (val && new Date(val).getTime() > 0) {\n        fields[\"datefield\"]++;\n      }\n\n      return acc;\n    }, fields);\n\n    if (fields[\"datefield\"] < 1) {\n      errEvMsg = `Timestamp keys are missing or Wrong format`;\n      errFlag = true; // setComplianceGuideline(prevComplianceGuideline => ({...prevComplianceGuideline, atLeast1DateCol:false}))\n    } else if (fields[\"datafield\"] < 1) {\n      errEvMsg = `Data keys are missing or Non-numeric`;\n      errFlag = true; //  setComplianceGuideline(prevComplianceGuideline => ({...prevComplianceGuideline, atLeast1DataCol:false}))\n    } else if (data.length < 8) {\n      //data length  more than 100....\n      errEvMsg = `Minimum number of observations are missing`;\n      errFlag = true;\n    } else if (data.length > 100) {\n      //data length  more than 100....\n      errEvMsg = `Maximum number of observations reached`;\n      errFlag = true; // setComplianceGuideline(prevComplianceGuideline => ({...prevComplianceGuideline, numRowsLessThan100:false}))\n    }\n\n    let keys = errFlag == true ? [] : Object.keys(data[0]);\n    setFormData(prevFormData => ({ ...prevFormData,\n      err: errFlag,\n      errMsg: errEvMsg,\n      evFile: fileName,\n      csvData: data,\n      csvKeys: keys\n    }));\n\n    if (debug) {\n      console.log(\"Valid Data :: \" + JSON.stringify(formData));\n    }\n  }; // Util Functions for ...\n\n\n  const validateDate = key => {\n    const {\n      csvData\n    } = formData;\n    const filteredData = validateFields(formData.csvData, key, date_pattern, formData.evFile);\n\n    if (debug) {\n      console.log(\"validateDate FilteredData :: \" + filteredData.length);\n    }\n\n    if (filteredData.length > 0) {\n      errEvMsg = `Timestamp keys are missing or wrong format`;\n      errFlag = true;\n    }\n\n    let fld1 = errFlag == true ? \"\" : key;\n    setFormData(prevFormData => ({ ...prevFormData,\n      evFld1: fld1,\n      evFld2: '',\n      evFld3: '',\n      err: errFlag,\n      errMsg: errEvMsg\n    }));\n\n    if (debug) {\n      console.log(\"After validateDate :: \" + JSON.stringify(formData));\n    }\n  };\n\n  const validateData = key => {\n    const filteredData = validateFields(formData.csvData, key, data_pattern, formData.evFile);\n\n    if (debug) {\n      console.log(\"validateData FilteredData :: \" + filteredData.length);\n    }\n\n    if (filteredData.length > 0) {\n      errEvMsg = `Data Keys are missing or Non-numeric`;\n      errFlag = true;\n    }\n\n    let fld2 = errFlag == true ? \"\" : key;\n    setFormData(prevFormData => ({ ...prevFormData,\n      evFld2: fld2,\n      evFld3: '',\n      errMsg: errEvMsg,\n      err: errFlag\n    }));\n\n    if (debug) {\n      console.log(\"After validateData :: \" + JSON.stringify(formData));\n    }\n  };\n\n  const validateFrequency = frequencyValue => {\n    const {\n      csvData\n    } = formData;\n\n    if (frequencyValue === \"H\" && csvData.length < 48) {\n      errEvMsg = `Minimum observations are missing for frequency ${frequencyValue}`;\n      errFlag = true;\n    } else if (frequencyValue === \"M\" && csvData.length < 24) {\n      errEvMsg = `Minimum observations are missing for frequency ${frequencyValue}`;\n      errFlag = true;\n    } else if (frequencyValue === \"D\" && csvData.length < 14) {\n      errEvMsg = `Minimum observations are missing for frequency ${frequencyValue} `;\n      errFlag = true;\n    } else if (frequencyValue === \"W\" && csvData.length < 8) {\n      errEvMsg = `Minimum observations are missing for frequency ${frequencyValue} `;\n      errFlag = true;\n    }\n\n    if (debug) {\n      console.log(\"Frequency TRUE :: \" + frequencyValue);\n    }\n\n    let fld3 = errFlag == true ? \"\" : frequencyValue;\n    setFormData(prevFormData => ({ ...prevFormData,\n      evFld3: fld3,\n      errMsg: errEvMsg,\n      err: errFlag\n    }));\n\n    if (debug) {\n      console.log(\"Error validateDate :: \" + JSON.stringify(formData));\n    }\n  };\n\n  const validateFields = (arr, fldName, pattern, evFile) => {\n    return arr.filter(x => pattern.test(x[fldName]) !== true); // end of map function....\n  };\n\n  const papaparseOptions = {\n    header: true,\n    dynamicTyping: true,\n    skipEmptyLines: true,\n    transformHeader: header => header.replace(/\\W/g, \" \")\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(EvaluationGuidelineComponent, {\n    complianceGuideline: complianceGuideline,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"support reset mar60\",\n    style: {\n      padding: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-header text-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"card-title reset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, \"New Evaluation..\")), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    method: \"post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    style: {\n      \"width\": \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(CSVReader, {\n    cssclassName: \"react-csv-input\",\n    label: \"Select Valid CSV File\",\n    onFileLoaded: handleForce,\n    parserOptions: papaparseOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, formData.errMsg), React.createElement(\"span\", {\n    className: \"success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, formData.successMsg)), React.createElement(\"div\", {\n    className: \"col-sm-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"evFld1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, \"Select timestamp key\"), React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"evFld1\",\n    name: \"evFld1\",\n    onChange: evt => {\n      validateDate(evt.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, \"Select timestamp key\"), formData && formData.csvKeys.map(value => React.createElement(\"option\", {\n    key: value,\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, value))))), React.createElement(\"div\", {\n    className: \"col-sm-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"evFld2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, \"Select data key\"), React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"evFld2\",\n    name: \"evFld2\",\n    onChange: evt => {\n      validateData(evt.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, \"Select data key\"), formData.csvKeys.filter(val => val != formData.evFld1).map(value => React.createElement(\"option\", {\n    key: value,\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, value))))), React.createElement(\"div\", {\n    className: \"col-sm-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"evFld3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, \"Select frequency\"), React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"evFld3\",\n    name: \"evFld3\",\n    onChange: evt => {\n      validateFrequency(evt.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, \"Select frequency\"), formData.frequencyOptions.map(val => React.createElement(\"option\", {\n    key: val.id,\n    value: val.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, val.name)))))), React.createElement(\"div\", {\n    className: \"form-row\",\n    style: {\n      padding: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    onClick: handleUploadClick,\n    disabled: formData.evFld1 == \"\" || formData.evFld2 === \"\" || formData.evFld3 === \"\" || formData.err === true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, \"Evaluate Data\")))))), formData.jsonObject !== undefined && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card mar60\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-header text-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-sm-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"card-title reset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, \"This is how your data looks\")), React.createElement(\"div\", {\n    className: \"col-sm-6\",\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"btn-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, formData.confidenceInterval === 1 && React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    style: {\n      padding: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, \"1\\u03C3\"), formData.confidenceInterval !== 1 && React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-outline-primary\",\n    onClick: () => changeConfidenceInterval(1),\n    style: {\n      padding: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, \"1\\u03C3\"), formData.confidenceInterval === 2 && React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    style: {\n      padding: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, \"2\\u03C3\"), formData.confidenceInterval !== 2 && React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-outline-primary\",\n    onClick: () => changeConfidenceInterval(2),\n    style: {\n      padding: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, \"2\\u03C3\"), formData.confidenceInterval === 3 && React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    style: {\n      padding: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, \"3\\u03C3\"), formData.confidenceInterval !== 3 && React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-outline-primary\",\n    onClick: () => changeConfidenceInterval(3),\n    style: {\n      padding: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, \"3\\u03C3\"), formData.confidenceInterval === 4 && React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    style: {\n      padding: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, \"4\\u03C3\"), formData.confidenceInterval !== 4 && React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-outline-primary\",\n    onClick: () => changeConfidenceInterval(4),\n    style: {\n      padding: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, \"4\\u03C3\"), formData.confidenceInterval === 5 && React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    style: {\n      padding: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, \"5\\u03C3\"), formData.confidenceInterval !== 5 && React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-outline-primary\",\n    onClick: () => changeConfidenceInterval(5),\n    style: {\n      padding: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }, \"5\\u03C3\"))))), React.createElement(\"div\", {\n    className: \"card-body\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, formData.jsonObject !== undefined && React.createElement(EvaluationChartComponent, {\n    jsonObject: formData.jsonObject,\n    confidenceInterval: formData.confidenceInterval,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }))))));\n\n  function changeConfidenceInterval(a) {\n    setFormData(prevFormData => ({ ...prevFormData,\n      confidenceInterval: a\n    }));\n  }\n}","map":{"version":3,"sources":["/Users/balasundararaothunga/Documents/Balasundar/TEST_PROJECTS/ReactJS/betatest/src/components/practicecomponents/apple_whistler/adhocevalution_local/evalution_form.jsx"],"names":["React","useState","useRef","CSVReader","moment","toast","EvaluationChartComponent","AnomalyService","EvaluationGuidelineComponent","EvalutionFormComponent","showList","setShowList","initalValues","evFld1","evFld2","evFld3","evFile","btnDisabled","err","errMsg","successMsg","csvKeys","csvData","jsonObject","undefined","confidenceInterval","frequencyOptions","id","name","initialCompliance","numRowsLessThan100","minHourlyRows","minDailyRows","minWeeklyRows","minMonthlyRows","atLeast2Cols","atLeast1DateCol","atLeast1DataCol","debug","data_pattern","RegExp","date_pattern","formData","setFormData","complianceGuideline","setComplianceGuideline","jsonObj","errEvMsg","errFlag","handleUploadClick","evt","console","log","preventDefault","timeSeriesData","map","x","index","tstamp","Date","data_item","getTime","test","datee","toLocaleDateString","format","data","push","whistlerAdhocEvalList","JSON","stringify","postAdhocEvaluationJsonExternal","then","response","prevFormData","document","querySelector","value","catch","countRepeated","arr","reduce","acc","val","set","get","Map","handleForce","fileName","errHFMsg","prevState","fields","column_length","columns","Object","keys","data_values","values","length","validateDate","key","filteredData","validateFields","fld1","validateData","fld2","validateFrequency","frequencyValue","fld3","fldName","pattern","filter","papaparseOptions","header","dynamicTyping","skipEmptyLines","transformHeader","replace","padding","target","changeConfidenceInterval","a"],"mappings":"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","sourcesContent":["import React,{useState, useRef} from 'react';\nimport CSVReader from \"react-csv-reader\";\nimport moment from 'moment';\nimport {toast} from 'react-toastify'\nimport EvaluationChartComponent from './EvaluationChartComponent.jsx';\nimport AnomalyService from '../../../../api/AnomalyService';\nimport EvaluationGuidelineComponent from './EvaluationGuidelineComponent.jsx'\n\nexport default function EvalutionFormComponent({showList, setShowList}) {\n    \n    const initalValues = {\n        evFld1: '',\n        evFld2: '',\n        evFld3: '',\n        evFile: '',\n        btnDisabled: false,\n        err: false,\n        errMsg: '',\n        successMsg: '',\n        csvKeys: [],\n        csvData: [],\n        jsonObject: undefined,\n        btnDisabled: false,\n        confidenceInterval: 3,\n        frequencyOptions: [{id:'D',name:'Daily'},{id:'W',name:'Weekly'},{id:'M',name:'Monthly'},{id:'H',name:'Hourly'}]\n    };\n\n    const initialCompliance = {\n        numRowsLessThan100: null,\n        minHourlyRows: null,\n        minDailyRows: null,\n        minWeeklyRows: null,\n        minMonthlyRows: null,\n        atLeast2Cols: null,\n        atLeast1DateCol: null,\n        atLeast1DataCol: null\n    }\n\n    let debug = false;\n    let data_pattern = new RegExp('^\\\\d+$');\n    var date_pattern = new RegExp(\"^(19|20)[0-9]{2}[\\/\\-](0[1-9]|1[012])|([a-zA-Z]{3})[\\/\\-](0[1-9]|[12][0-9]|3[01])(T|\\s)(([0-1][0-9])|(2[0-3])):([0-5][0-9]):([0-5][0-9])$\");\n    const [formData, setFormData] = useState(initalValues);\n    const [complianceGuideline, setComplianceGuideline] = useState(initialCompliance)\n    const jsonObj={};\n    let errEvMsg = \"\";\n    let errFlag = false;\n\n\n    // HandleUpload Btn Click....\n    const handleUploadClick = (evt) => {\n        console.log(evFld1, evFld2, evFld3, evFile)\n        evt.preventDefault();\n        const {evFld1, evFld2, evFld3, evFile} = formData;\n        let timeSeriesData = [];\n\n        // validating data is proper \n        formData.csvData.map( (x,index )=> {\n            let tstamp = (new Date(x[evFld1]));\n            let data_item  = x[evFld2];\n            if( (tstamp.getTime() > 0 &&  date_pattern.test(x[evFld1]) === true  )  && (data_pattern.test(data_item) === true) ) {\n                let datee = moment( tstamp.toLocaleDateString() ).format(\"YYYY-MM-DD HH:mm:ss\");\n                let data = {\n                    \"timestamp\": datee,\n                    \"value\": x[evFld2]\n                }\n                return timeSeriesData.push(data);\n            } else {\n                setFormData({ ...formData, err: true});\n            }\n        });  // end of map function....\n\n        jsonObj[\"timeseriesdata\"] = timeSeriesData;\n        jsonObj[\"frequency\"] = evFld3;\n        console.log( jsonObj );       \n        const whistlerAdhocEvalList = JSON.stringify(jsonObj)\n\n        AnomalyService.postAdhocEvaluationJsonExternal(whistlerAdhocEvalList)\n        .then(response => {\n            //setFormData({...formData, jsonObject: response.data})\n            setFormData( prevFormData => ({...prevFormData,  jsonObject: response.data, successMsg:\"\", evFile: ''}));\n            document.querySelector('.csv-input').value = ''\n        })\n        .then(console.log(formData))\n        .catch()\n\n        setFormData( {...initalValues, frequencyOptions: [], successMsg: 'Evaluating your data now...' });// resetting the state after submit....\n        //console.log(formData.evFld1, formData.evFld2, formData.evFld3, formData.evFile)\n\n    }\n    \n    function countRepeated(arr) {\n       return  arr.reduce((acc, val) => acc.set(val, 1 + (acc.get(val) || 0)), new Map());\n    }\n\n    // File Upload Event....\n    const handleForce = (data, fileName) => {\n        let errHFMsg = \"\";\n        setFormData( prevState => initalValues);\n        if(debug) { console.log( \"HandleForce after Initial :: \" + JSON.stringify(formData)); }\n        let fields =  {\"datafield\":0, \"datefield\":0}; \n        const column_length = 2;\n        const columns = Object.keys(data[0]);\n        const data_values = Object.values(data[1]);\n        data_values.reduce( (acc, val) => {\n            if( (data_pattern.test(val) === true)  ) {\n                fields[\"datafield\"]++;\n            }else if( val &&  ((new Date(val)).getTime() > 0)) {\n                fields[\"datefield\"]++;\n            }\n            return acc;\n        },fields)\n        \n        if( fields[\"datefield\"] < 1  )  {\n            errEvMsg = `Timestamp keys are missing or Wrong format`;\n            errFlag = true;\n            // setComplianceGuideline(prevComplianceGuideline => ({...prevComplianceGuideline, atLeast1DateCol:false}))\n        } else if (fields[\"datafield\"] < 1 ) {\n            errEvMsg = `Data keys are missing or Non-numeric`;\n             errFlag = true;\n            //  setComplianceGuideline(prevComplianceGuideline => ({...prevComplianceGuideline, atLeast1DataCol:false}))\n        } else if( data.length < 8  ){ //data length  more than 100....\n            errEvMsg = `Minimum number of observations are missing`;\n            errFlag = true;\n        } else if( data.length > 100  ){ //data length  more than 100....\n            errEvMsg = `Maximum number of observations reached`;\n            errFlag = true;\n            // setComplianceGuideline(prevComplianceGuideline => ({...prevComplianceGuideline, numRowsLessThan100:false}))\n        }\n        let keys = (errFlag == true ) ? [] : Object.keys(data[0]);\n        setFormData( prevFormData => ({...prevFormData, err: errFlag, errMsg: errEvMsg, evFile: fileName, csvData: data, csvKeys:keys }));\n        if(debug) { console.log( \"Valid Data :: \" + JSON.stringify(formData)); }\n    } \n    \n    // Util Functions for ...\n    const validateDate = (key) => {\n        const {csvData} = formData;\n        const filteredData = validateFields( formData.csvData, key, date_pattern, formData.evFile );\n        if(debug) { console.log( \"validateDate FilteredData :: \" + filteredData.length); }\n        if( filteredData.length > 0) {\n            errEvMsg = `Timestamp keys are missing or wrong format`;\n            errFlag = true;\n        } \n        let fld1 = ( errFlag == true ) ? \"\" : key;\n        setFormData( prevFormData => ({...prevFormData,  evFld1:fld1 , evFld2:'', evFld3:'', err:errFlag,  errMsg: errEvMsg}));\n        if(debug) { console.log( \"After validateDate :: \" + JSON.stringify(formData)); }\n    }\n\n    const validateData = (key) => {\n        const filteredData =  validateFields( formData.csvData, key, data_pattern, formData.evFile );\n        if(debug) { console.log( \"validateData FilteredData :: \" + filteredData.length); }\n        if( filteredData.length > 0) {\n            errEvMsg = `Data Keys are missing or Non-numeric`;\n            errFlag = true;\n        } \n        let fld2 = ( errFlag == true ) ? \"\" : key;\n        setFormData( prevFormData => ({...prevFormData, evFld2:fld2, evFld3:'', errMsg: errEvMsg, err:errFlag }));\n        if(debug) { console.log( \"After validateData :: \" + JSON.stringify(formData)); }\n    }\n\n    const validateFrequency = (frequencyValue) => {\n        const {csvData} = formData;\n        if( frequencyValue === \"H\" && csvData.length < 48 ) {\n            errEvMsg =`Minimum observations are missing for frequency ${frequencyValue}`;\n            errFlag = true;\n        } else if ( frequencyValue === \"M\" && csvData.length < 24 ) {\n            errEvMsg = `Minimum observations are missing for frequency ${frequencyValue}`;\n            errFlag = true;\n        }\n        else if ( frequencyValue === \"D\" && csvData.length < 14 ) {\n            errEvMsg = `Minimum observations are missing for frequency ${frequencyValue} `;\n            errFlag = true;\n        } else if ( frequencyValue === \"W\" && csvData.length < 8 ) {\n            errEvMsg = `Minimum observations are missing for frequency ${frequencyValue} `;\n            errFlag = true;\n        }             \n        if(debug) { console.log( \"Frequency TRUE :: \" + frequencyValue); }\n        let fld3 = ( errFlag == true ) ? \"\" : frequencyValue;\n        setFormData( prevFormData => ({...prevFormData, evFld3:fld3,  errMsg: errEvMsg, err:errFlag}));\n        if(debug) { console.log( \"Error validateDate :: \" + JSON.stringify(formData)); }\n    }\n\n    const validateFields=( arr, fldName, pattern,evFile ) => {\n        return arr.filter( (x) => pattern.test(x[fldName]) !== true  );  // end of map function....\n    }\n\n    const papaparseOptions = {\n        header: true,\n        dynamicTyping: true,\n        skipEmptyLines: true,\n        transformHeader: header => header.replace(/\\W/g, \" \")\n    };\n\n    return (\n        <div>\n            <EvaluationGuidelineComponent complianceGuideline={complianceGuideline}/>\n            <div className=\"support reset mar60\" style={{padding:0}}>\n                <div className=\"card\">\n                    <div className=\"card-header text-left\">\n                        <h5 className=\"card-title reset\">New Evaluation..</h5>\n                    </div>\n                    <div className=\"card-body\">\n                        <form method=\"post\"> \n                            <div className=\"form-row\"> \n                                {/* file type */}\n                                <div className=\"form-group\" style={{\"width\": \"100%\"}}>\n                                    <CSVReader cssclassName=\"react-csv-input\" label=\"Select Valid CSV File\" onFileLoaded={handleForce} parserOptions={papaparseOptions} />\n                                </div>\n                                {/* Error Message */}\n                                <div className=\"form-group\">\n                                    <span className=\"error\">{formData.errMsg}</span> \n                                    <span className=\"success\">{formData.successMsg}</span> \n                                </div>\n\n                                {/* evaluation Time */}\n                                <div className=\"col-sm-4\">\n                                    <div className=\"form-group\">\n                                        <label for=\"evFld1\">Select timestamp key</label>\n                                        <select className=\"form-control\" id=\"evFld1\" name=\"evFld1\" onChange={(evt)=>{ validateDate(evt.target.value);} }> \n                                        <option value=\"\">Select timestamp key</option>\n                                        { formData &&  formData.csvKeys.map( value =>\n                                            <option key={value} value={value}>{value}</option> )\n                                        }\n                                        </select>\n                                    </div>\n                                </div>\n\n                                {/* evaluation Data */}\n                                <div className=\"col-sm-4\">\n                                    <div className=\"form-group\">\n                                        <label for=\"evFld2\">Select data key</label>\n                                        <select className=\"form-control\" id=\"evFld2\" name=\"evFld2\" onChange={(evt)=> {validateData(evt.target.value);}}> \n                                        <option value=\"\">Select data key</option>\n                                        { formData.csvKeys.filter( val => val!= formData.evFld1 ).map( value =>\n                                            <option key={value} value={value}>{value}</option> )\n                                        }\n                                        </select>\n                                    </div>\n                                </div>\n\n                                {/* disabled={ (formData.evFld1==\"\" || formData.evFld2===\"\") } */}\n                                {/* Frequency Data.. */}\n                                <div className=\"col-sm-4\">\n                                    <div className=\"form-group\">\n                                        <label for=\"evFld3\">Select frequency</label>\n                                        <select className=\"form-control\" id=\"evFld3\" name=\"evFld3\" onChange={(evt)=> {validateFrequency(evt.target.value);}}> \n                                            <option value=\"\">Select frequency</option>\n                                            {\n                                                formData.frequencyOptions.map( (val) =>  <option key={val.id} value={val.id}>{val.name}</option> )\n                                            }\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-row\" style={{padding: 15}}>\n                                <div className=\"col\">\n                                    <button type=\"submit\" className=\"btn btn-primary\" onClick={handleUploadClick} \n                                    disabled={ formData.evFld1==\"\" || formData.evFld2===\"\"  || formData.evFld3===\"\" || formData.err === true }>Evaluate Data</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n\n                {formData.jsonObject!==undefined && <div>\n                    <div className=\"card mar60\">\n                        <div className=\"card-header text-left\">\n                            <div className=\"row\">\n                                <div className=\"col-sm-6\">\n                                    <h5 className=\"card-title reset\">This is how your data looks</h5>\n                                </div>\n                                <div className=\"col-sm-6\" align=\"right\">\n                                    <div className=\"btn-group\">\n                                        {formData.confidenceInterval===1 && <button type=\"button\" className=\"btn btn-primary\" style={{padding:5}}>1σ</button>}\n                                        {formData.confidenceInterval!==1 && <button type=\"button\" className=\"btn btn-outline-primary\" onClick={()=>changeConfidenceInterval(1)} style={{padding:5}}>1σ</button>}\n\n                                        {formData.confidenceInterval===2 && <button type=\"button\" className=\"btn btn-primary\" style={{padding:5}}>2σ</button>}\n                                        {formData.confidenceInterval!==2 && <button type=\"button\" className=\"btn btn-outline-primary\" onClick={()=>changeConfidenceInterval(2)} style={{padding:5}}>2σ</button>}\n\n                                        {formData.confidenceInterval===3 && <button type=\"button\" className=\"btn btn-primary\" style={{padding:5}}>3σ</button>}\n                                        {formData.confidenceInterval!==3 && <button type=\"button\" className=\"btn btn-outline-primary\" onClick={()=>changeConfidenceInterval(3)} style={{padding:5}}>3σ</button>}\n\n                                        {formData.confidenceInterval===4 && <button type=\"button\" className=\"btn btn-primary\" style={{padding:5}}>4σ</button>}\n                                        {formData.confidenceInterval!==4 && <button type=\"button\" className=\"btn btn-outline-primary\" onClick={()=>changeConfidenceInterval(4)} style={{padding:5}}>4σ</button>}\n\n                                        {formData.confidenceInterval===5 && <button type=\"button\" className=\"btn btn-primary\" style={{padding:5}}>5σ</button>}\n                                        {formData.confidenceInterval!==5 && <button type=\"button\" className=\"btn btn-outline-primary\" onClick={()=>changeConfidenceInterval(5)} style={{padding:5}}>5σ</button>}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body\" align=\"center\">\n                            {formData.jsonObject!==undefined && <EvaluationChartComponent jsonObject={formData.jsonObject} confidenceInterval={formData.confidenceInterval}/>}\n                        </div>\n                    </div>\n                </div>}\n            </div>\n        </div>\n    )\n\n    function changeConfidenceInterval(a){\n        setFormData( prevFormData => ({...prevFormData, confidenceInterval: a}));\n    }\n\n}"]},"metadata":{},"sourceType":"module"}